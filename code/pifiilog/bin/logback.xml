<?xml version="1.0" encoding="UTF-8"?>
 
<!-- For assistance related to logback-translator or configuration  -->
<!-- files in general, please contact the logback user mailing list -->
<!-- at http://www.qos.ch/mailman/listinfo/logback-user             -->
<!--                                                                -->
<!-- For professional support please see                            -->
<!--    http://www.qos.ch/shop/products/professionalSupport         -->
<!--                                                                -->
 
 
    <!-- 
    NOTE:
        scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
        scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                    当scan为true时，此属性生效。默认的时间间隔为1分钟。
        debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
    -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
 
    <!-- 
    NOTE:
            用来定义变量值的标签，<property> 有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。
            通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。
     -->
    <property name="hmzw_builder" value="hmzw_builder" />
 
    <!-- 
    NTOE:
            每个logger都关联到logger上下文，默认上下文名称为“default”。
            但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。
    -->
    <contextName>${hmzw_builder}</contextName>
 
    <!-- 
    ConsoleAppender:
        <encoder>：对日志进行格式化。（具体参数稍后讲解 ）
        <target>：字符串 System.out 或者 System.err ，默认 System.out ；
     -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} - %m%n</pattern>
        </encoder>
    </appender>
   
    <!-- 
    FileAppender:
        <file>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。
        <append>：如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。
        <encoder>：对记录事件进行格式化。
        <prudent>：如果是 true，日志会被安全的写入文件，即使其他的FileAppender也在向此文件做写入操作，效率低，默认是 false。
     -->
     <appender name="FILE" class="ch.qos.logback.core.FileAppender">  
        <file>logs/logserver.log</file>  
        <append>true</append>  
        <encoder>  
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>  
        </encoder>  
    </appender>
      
    <!-- 
    RollingFileAppender:
        <file>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。
        <append>：如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。
        <encoder>：对记录事件进行格式化。
        <rollingPolicy>:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。
        <triggeringPolicy >: 告知 RollingFileAppender 合适激活滚动。
        <prudent>：当为true时，不支持FixedWindowRollingPolicy。支持TimeBasedRollingPolicy，
                                        但是有两个限制，1不支持也不允许文件压缩，2不能设置file属性，必须留空。
     -->     
    <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/hmzw.log</File>
        <RollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/hmzw.log.%d{yyyy-MM-dd-a}.gz</fileNamePattern>   
            <maxHistory>30</maxHistory>
        </RollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d %t %p %c - %m%n</pattern>
        </layout>
    </appender>
     
    <!-- 
    NOTE:
        name: 用来指定受此logger约束的某一个包或者具体的某一个类。
        level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
                            还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。
                            如果未设置此属性，那么当前logger将会继承上级的级别。
        additivity:是否向上级logger传递打印信息。默认是true。
        <logger>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。
     -->
    <logger name="org.happymzw" level="DEBUG" additivity="true">
        <appender-ref ref="CONSOLE"/>
    </logger>
   
   
   
    <!-- 控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>
 
    <!-- 时间滚动输出 level为 DEBUG 日志 -->
    <appender name="file—debug"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>D:/logs/debug.%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>
 
    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="file—error"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>D:/logs/error.%d{yyyy-MM-dd}.log</FileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>
 
    <!-- 特定过滤含有某字符串的日志   //这个报错
    <appender name="file-str"
        class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator>
                <expression>message.contains("str")</expression>
            </evaluator>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>D:/logs/contains.%d{yyyy-MM-dd}.log
            </FileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>
 -->
 
    <!-- 数据库输出 -->
    <appender name="db" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource
            class="ch.qos.logback.core.db.DriverManagerConnectionSource">
            <driverClass>com.mysql.jdbc.Driver</driverClass>
            <url>jdbc:mysql://localhost:3306/test?characterEncoding=utf8</url>
            <user>root</user>
            <password>ifidc2403</password>
        </connectionSource>
    </appender>
        <logger name="java.sql.Connection">
        <level value="ERROR" />
    </logger>
<!--
    <logger name="java.sql.Statement">
        <level value="DEBUG" />
    </logger>
    <logger name="com.ibatis">
        <level value="DEBUG" />
    </logger>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource">
        <level value="DEBUG" />
    </logger>
    <logger name="com.ibatis.common.jdbc.ScriptRunner">
        <level value="DEBUG" />
    </logger>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate">
        <level value="DEBUG" />
    </logger>
    <logger name="com.danga.MemCached">
        <level value="INFO" />
    </logger>
    <logger name="org.springframework.test">
        <level value="DEBUG" />
    </logger>
    <logger name="org.apache.struts2">
        <level value="DEBUG" />
    </logger>
-->
    <!-- 
    NOTE:
        <root>也是<logger>元素，但是它是根logger。只有一个level属性，应为已经被命名为"root"。
        level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，
                                不能设置为INHERITED或者同义词NULL。默认是DEBUG。
        <root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。
     -->
    <root level="DEBUG">
        <appender-ref ref="logfile"/>
     	 <appender-ref ref="CONSOLE"/>
     	 <appender-ref ref="db" />
    </root>
    
     <root level="ERROR">
     	 <appender-ref ref="db" />
    </root>
   <!--
       	<appender-ref ref="stdout" />
        <appender-ref ref="file—debug" />
        <appender-ref ref="file—error" />
        <appender-ref ref="file-str" />
  
   -->  
</configuration>